<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd">

<!--
	This application context does nothing more than initializing a PropertyPlaceholderConfigurer
	that uses a different property file from the one in veriniceserver-osgi.xml .
	
	This file is referenced in the web.xml . 
 -->

<bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
	<property name="ignoreResourceNotFound" value="true"/>
    <property name="ignoreUnresolvablePlaceholders" value="true" />
    <property name="locations">
    	<list>
            <value>/WEB-INF/veriniceserver-plain.properties.default</value>
        	<value>/WEB-INF/veriniceserver-plain.properties</value>
        	<value>/WEB-INF/veriniceserver-plain.properties.local</value>
        	<value>/WEB-INF/verinice-ldap.properties</value>
        </list>
    </property>
</bean>

<!-- Mail notification infrastructure -->
<bean id="mailSender" 
	class="org.springframework.mail.javamail.JavaMailSenderImpl">
		<property name="username" value="${veriniceserver.notification.smtp.username}"/>
		<property name="password" value="${veriniceserver.notification.smtp.password}"/>
		<property name="host" value="${veriniceserver.notification.smtp.host}"/>
		<property name="port" value="${veriniceserver.notification.smtp.port}"/>
</bean>

<bean id="velocityEngine" class="org.springframework.ui.velocity.VelocityEngineFactoryBean">
      <property name="velocityProperties">
         <value>
            resource.loader=class
            class.resource.loader.class=org.apache.velocity.runtime.resource.loader.ClasspathResourceLoader
         </value>
      </property>
   </bean>


<bean name="pniCommand" class="sernet.verinice.service.commands.PrepareNotificationInfo"/>

<bean name="notificationJob" class="org.springframework.scheduling.quartz.JobDetailBean">
  <property name="jobClass" value="sernet.gs.server.MailJob" />
  <property name="jobDataAsMap">
    <map>
      <entry key="mailSender" value-ref="mailSender" />
      <entry key="commandService" value-ref="commandService" />
      <entry key="pniCommand" value-ref="pniCommand" />
      <entry key="notificationEnabled" value="${veriniceserver.notification.enabled}" />
      <entry key="notificationEmailFrom" value="${veriniceserver.notification.email.from}" />
      <entry key="notificationEmailCc" value="${veriniceserver.notification.email.cc}" />
      <entry key="notificationEmailBcc" value="${veriniceserver.notification.email.bcc}" />
      <entry key="notificationEmailReplyTo" value="${veriniceserver.notification.email.replyto}" />
      <entry key="notificationEmailLinkTo" value="${veriniceserver.notification.email.linkto}" />
      <entry key="notificationEmailDateFormat" value="${veriniceserver.notification.email.dateformat}" />
    </map>
  </property>
</bean>

<!-- This bean runs a Hibernate callback that delete all orphan modeling template
relations. 
See hibernate mapping for CnATreeElement.implementedTemplateUuids in CnATreeElement.hbm.xml. -->
<bean name="deleteOrphanTemplateRelationsJob" class="org.springframework.scheduling.quartz.JobDetailBean">
  <property name="jobClass" value="sernet.gs.server.DeleteOrphanTemplateRelationsJob" />
  <property name="jobDataAsMap">
    <map>
      <entry key="elementDao" value-ref="cnaTreeElementDao" />
    </map>
  </property>
</bean>

<bean id="cronTrigger" class="org.springframework.scheduling.quartz.CronTriggerBean">
    <property name="jobDetail" ref="notificationJob" />
    <property name="cronExpression" value="0 ${veriniceserver.notification.minute} ${veriniceserver.notification.hour} * * ?" />
</bean>

<!-- Spring/Quartz trigger bean to execute cron job processJob. -->
<bean id="processJobTrigger" class="org.springframework.scheduling.quartz.CronTriggerBean">
    <property name="jobDetail" ref="processJob" />
    <!-- for debug only, execute every 2 minutes -->
    <!-- <property name="cronExpression" value="0 */2 * * * ?" /> -->
    <!-- execute every 30 minutes -->
    <property name="cronExpression" value="0 */30 * * * ?" />
</bean>

<!-- Greenbone Security Manager (GSM) task generation for data imported from GSM -->
<!-- See veriniceserver-jbpm.xml -->
<!-- Spring/Quartz trigger bean to execute cron job gsmProcessJob. -->
<bean id="gsmProcessJobTrigger" class="org.springframework.scheduling.quartz.CronTriggerBean">
    <property name="jobDetail" ref="gsmProcessJob" />
    <property name="cronExpression" value="${veriniceserver.gsmGenerator.cron}" />
</bean>

<bean id="taskNotificationTrigger" class="org.springframework.scheduling.quartz.CronTriggerBean">
     <property name="jobDetail" ref="taskNotificationJob" />
     <!-- for debug only, execute every 2 minutes -->
     <!--<property name="cronExpression" value="0 */2 * * * ?" />-->
     <!-- set execution time in veriniceserver-plain.properties -->
     <property name="cronExpression" value="0 ${veriniceserver.notification.minute} ${veriniceserver.notification.hour} * * ?" />
</bean>

<bean id="licenseRemoverTrigger" class="org.springframework.scheduling.quartz.CronTriggerBean">
	<property name="jobDetail" ref="licenseRemoverJob"/>
    <!-- for debug only, execute every 2 minutes -->
    <!-- <property name="cronExpression" value="0 */2 * * * ?" /> -->
    <!-- execute every new day in the night at 0:02  -->
    <property name="cronExpression" value="0 2 0 1/1 * ? *" />
</bean>

 <!-- Spring/Quartz trigger bean to execute cron job DeleteOrphanTemplateRelationsJob-->
<bean id="deleteOrphanTemplateRelationsTrigger" class="org.springframework.scheduling.quartz.CronTriggerBean">
	<property name="jobDetail" ref="deleteOrphanTemplateRelationsJob" />
	<!-- execute once a month -->
	<property name="cronExpression" value="0 3 1 */1 * ?" />
</bean>

<bean id="quartzSchedulerFactoryBean" class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
    <property name="triggers">
        <list>
              <ref bean="cronTrigger" />
              <ref bean="processJobTrigger" />
              <!-- GSM task generation -->
              <ref bean="gsmProcessJobTrigger" />            
              <ref bean="indexTrigger" />
              <ref bean="taskNotificationTrigger" /> 
              <ref bean="licenseRemoverTrigger" /> 
              <!-- templates -->
              <ref bean="deleteOrphanTemplateRelationsTrigger" />  
              
            <!--  for debugging purposes, fires the mail scheduler after 2 seconds and then every 60
			<bean class="org.springframework.scheduling.quartz.SimpleTriggerBean">
				<property name="jobDetail" ref="notificationJob" />
				<property name="startDelay" value="2000" />
				<property name="repeatInterval" value="60000" />
			</bean>
			 -->
        </list>
    </property>
</bean>

<bean class="sernet.verinice.service.commands.PropertyLoader">
    <property name="fileSizeMax" value="${veriniceserver.filesize.max}" />
    <property name="modelingTemplateActive" value="${modeling.template.active}" />
    <property name="modelingTemplateMaster" value="${modeling.template.master}" />
</bean>
    
 
</beans>
